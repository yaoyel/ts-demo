{"version":3,"file":"UserRepository.js","sourceRoot":"","sources":["../../../src/repository/UserRepository.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,qCAAiD;AACjD,mCAA+B;AAC/B,qDAA2C;AAC3C,yEAAyE;AAGzE,IAAa,eAAe,GAA5B;IAKI,YAA2C,cAAgC;QAAhC,mBAAc,GAAd,cAAc,CAAkB;IAAE,CAAC;IACvE,WAAW,CAAC,KAAa;QAC5B,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IACtC,CAAC;CACJ,CAAA;AANG;IADC,4CAAgB,EAAE;8BACG,uBAAa;sDAAC;AAH3B,eAAe;IAD3B,gBAAO,EAAE;IAMO,WAAA,yCAAa,CAAC,kBAAK,CAAC,CAAA;qCAAyB,oBAAU;GAL3D,eAAe,CAS3B;AATY,0CAAe","sourcesContent":["import {Repository,EntityManager} from \"typeorm\";\nimport {Service} from \"typedi\";\nimport {Users} from \"../entity/UserEntity\";\nimport {OrmRepository,OrmEntityManager} from \"typeorm-typedi-extensions\";\n\n@Service()\nexport class UsersRepository {\n\n    @OrmEntityManager()\n    private entityManager:EntityManager;\n\n    constructor(@OrmRepository(Users) private  userRepository:Repository<Users>){}\n    public findByEmail(email: string) {\n        return this.userRepository.find();\n    }\n}"]}